// for dynamic retrieval
library identifier: 'jenkins-devops-libs@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/mschuchard/jenkins-devops-libs.git'])
// if added in Jenkins global config shared libraries
//@Library('jenkins-devops-libs')_
// if added in Jenkins global config shared libraries and the github api plugin is bugging out and slamming github with requests
//library('jenkins-devops-libs')_

pipeline {
  agent any

  environment {
    TOWER_OAUTH_TOKEN = '6E5SXhld7AMOhpRveZsLJQsfs9VS8U'
    TOWER_HOST        = 'awx.svc.cluster.local'
  }

  stages {
    stage('Host Create') {
      steps {
        script {
          awx.host_create(
            description: 'my host', // optional description of the host
            enabled:     true, // optional is host available and online for running jobs
            inventory:   'my_inventory', // ID of the associated inventory
            name:        'foo.bar.com', // name of the host
            variables:   ['foo': 'bar', 'baz': 1], // optional host variables
          )
        }
      }
    }
    stage('Host Delete') {
      steps {
        script {
          awx.host_delete('foo.bar.com')
        }
      }
    }
    stage('Inventory Delete') {
      steps {
        script {
          awx.inventory_delete('my_inventory')
        }
      }
    }
    stage('Job Template Launch') {
      steps {
        script {
          awx.job_template_launch(
            extra_vars: ['foo': 'bar', 'baz': 1], // optional extra variables
            id:         5, // job template id
            job_type:   'run', // optional job type (run or check)
            skip_tags:  ['skipper', 'to_skip'] // optional tags to skip
          )
        }
      }
    }
  }
}

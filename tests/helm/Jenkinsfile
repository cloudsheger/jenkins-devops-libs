// for dynamic retrieval
library identifier: 'jenkins-devops-libs@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/mschuchard/jenkins-devops-libs.git'])
// if added in Jenkins global config shared libraries
//@Library('jenkins-devops-libs')_
// if added in Jenkins global config shared libraries and the github api plugin is bugging out and slamming github with requests
//library('jenkins-devops-libs')_

pipeline {
  agent any

  environment { KUBECONFIG = '/home/vagrant/.kube/config' }

  stages {
    stage('Setup') {
      steps {
        script {
          helm.setup('3.1.3', '/usr/bin')
          helm.kubectl('1.19.5', '/usr/bin')
        }
      }
    }
    stage('Lint') {
      steps {
        script {
          helm.lint(
            bin:   '/usr/bin/helm', // optional executable path for helm
            chart: 'stable/mariadb' // chart repository, local archive, directory, or url to install
          )
        }
      }
    }
    stage('Repo') {
      steps {
        script {
          helm.repo(
            repo: 'stable',
            url:  'https://kubernetes-charts.storage.googleapis.com'
          )
        }
      }
    }
    stage('Install') {
      steps {
        script {
          helm.install(
            bin:   '/usr/bin/helm', // optional executable path for helm
            chart: 'stable/mariadb', // chart repository, local archive, directory, or url to install
            name:  'happy-panda' // optional name for the installed release object
          )
        }
      }
    }
    stage('Upgrade') {
      steps {
        script {
          helm.upgrade(
            bin:       '/usr/bin/helm', // optional executable path for helm
            chart:     'stable/mariadb', // chart repository, local archive, directory, or url to upgrade
            install:   false, // optional install if release not already present
            name:      'happy-panda', // name of the upgraded release object
          )
        }
      }
    }
    stage('Rollback') {
      steps {
        script {
          helm.rollback(
            bin:     '/usr/bin/helm', // optional executable path for helm
            name:    'happy-panda', // release object name to rollback
            version: '1' // version of release-object to rollback to
          )
        }
      }
    }
    stage('Test') {
      steps {
        script {
          helm.test(
            bin:     '/usr/bin/helm', // optional executable path for helm
            chart:   'stable/mariadb', // chart repository, local archive, directory, or url to install
            kubectl: '/usr/bin/kubectl', // optional executable path for kubectl
            name:    'happy-panda' // name of a deployed release
          )
        }
      }
    }
    stage('Uninstall') {
      steps {
        script {
          helm.uninstall(name: 'happy-panda')
        }
      }
    }
  }
}

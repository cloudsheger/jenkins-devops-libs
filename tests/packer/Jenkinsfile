// for dynamic retrieval
library identifier: 'jenkins-devops-libs@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/mschuchard/jenkins-devops-libs.git'])
// if added in Jenkins global config shared libraries
//@Library('jenkins-devops-libs')_
// if added in Jenkins global config shared libraries and the github api plugin is bugging out and slamming github with requests
//library('jenkins-devops-libs')_

pipeline {
  agent any

  stages {
    stage('Install') {
      steps {
        script {
          packer.install {
            version      = '1.6.6'
            install_path = '/tmp'
            platform     = 'linux_amd64'
          }
          packer.install(
            version:      '1.6.6',
            install_path: '/tmp',
            platform:     'linux_amd64'
          )
        }
      }
    }
    stage('Plugin Install') {
      steps {
        script {
          packer.plugin_install('https://github.com/YaleUniversity/packer-provisioner-goss/releases/download/v1.4.0/packer-provisioner-goss-v1.4.0-linux-amd64', '/usr/bin/packer-provisioner-goss')
        }
      }
    }
    stage('Validate') {
      steps {
        sh 'curl -L https://raw.githubusercontent.com/mschuchard/jenkins-devops-libs/master/tests/packer/docker.pkr.json -o /tmp/docker.pkr.json'
        sh 'curl -L https://raw.githubusercontent.com/mschuchard/jenkins-devops-libs/master/tests/packer/docker.pkr.hcl -o /tmp/docker.pkr.hcl'

        script {
          packer.validate {
            bin      = '/tmp/packer'
            template = '/tmp/docker.pkr.json'
          }
          packer.validate(
            bin:      '/tmp/packer',
            template: '/tmp/docker.pkr.json'
          )
        }
      }
    }
    stage('Format') {
      steps {
        script {
          packer.fmt(
            bin:       '/tmp/packer',
            check:     true,
            diff:      true,
            template: '/tmp/docker.pkr.hcl'
          )
        }
      }
    }
    stage('Inspect') {
      steps {
        script {
          packer.inspect('/tmp/docker.pkr.json', '/tmp/packer')
          packer.inspect('/tmp/docker.pkr.hcl', '/tmp/packer')
        }
      }
    }
    stage('Build') {
      steps {
        script {
          packer.build(
            bin:      '/tmp/packer',
            template: '/tmp/docker.pkr.json'
          )
          packer.build(
            bin:      '/tmp/packer',
            template: '/tmp/docker.pkr.hcl'
          )
        }
      }
    }
  }
}
